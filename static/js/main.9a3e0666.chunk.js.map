{"version":3,"sources":["containers/Counter.js","actions.js","App.js","store/reducers/counter.js","store/reducers/results.js","index.js"],"names":["Counter","console","log","this","props","counter","ctr","onClick","onIncCounter","onDecCounter","addCounter","removeCounter","onStoreCounter","storedResult","map","item","key","id","onDeleteCounter","value","Component","connect","state","res","results","dispatch","type","result","resultElementId","App","className","initialState","reducer","action","concat","Date","filter","window","devToolsExtension","__REDUX_DEVTOOLS_EXTENSION__","rootReducer","combineReducers","counterReducer","resultReducer","store","createStore","compose","applyMiddleware","thunk","f","ReactDOM","render","document","getElementById"],"mappings":"qSAIMA,E,iLAmBS,IAAD,OAEN,OADAC,QAAQC,IAAI,WAAYC,KAAKC,MAAMC,SAI/B,6BACI,8CAAoBF,KAAKC,MAAME,IAA/B,KAEA,6BACI,4BAAQC,QAASJ,KAAKC,MAAMI,cAA5B,aACA,4BAAQD,QAASJ,KAAKC,MAAMK,cAA5B,aACA,4BAAQF,QAASJ,KAAKC,MAAMM,YAA5B,SACA,4BAAQH,QAASJ,KAAKC,MAAMO,eAA5B,eACA,4BAAQJ,QAAS,kBAAM,EAAKH,MAAMQ,eAAe,EAAKR,MAAME,OAA5D,gBACA,4BACKH,KAAKC,MAAMS,aAAaC,KAAI,SAAAC,GAAI,OAC7B,wBAAIC,IAAKD,EAAKE,GAAIV,QAAS,kBAC3B,EAAKH,MAAMc,gBAAgBH,EAAKE,MAAMF,EAAKI,iB,GApCjDC,aAgEPC,eAnBS,SAAAC,GACpB,MAAO,CACHhB,IAAKgB,EAAMhB,IAAID,QACfQ,aAAcS,EAAMC,IAAIC,YAIL,SAAAC,GACvB,MAAO,CACHjB,aAAc,kBAAMiB,EAAS,CAACC,KC1Db,eD2DjBjB,aAAc,kBAAMgB,EAAS,CAACC,KC1Db,eD2DjBhB,WAAY,kBAAMe,EAAS,CAACC,KC1DjB,MD0DwCP,MAAM,KACzDR,cAAe,kBAAMc,EAAS,CAACC,KC1DjB,SD0D2CP,MAAM,KAC/DP,eAAgB,SAACe,GAAD,OAAYF,EAAS,CAACC,KC1DlB,eD0DkDC,OAAOA,KAC7ET,gBAAiB,SAACD,GAAD,OAAQQ,EAAS,CAACC,KC1Dd,gBD0D+CE,gBAAgBX,QAK7EI,CAA6CrB,GExD7C6B,EARH,WACV,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,Q,+kBCLN,IAAMC,EAAe,CACjB1B,QAAS,GAwBE2B,EArBC,WAAmC,IAAlCV,EAAiC,uDAAzBS,EAAcE,EAAW,uCAE9C,OADAhC,QAAQC,IAAI,SAAUoB,GACdW,EAAOP,MACX,IFTiB,YEUb,OAAO,EAAP,GAAYJ,EAAZ,CAAmBjB,QAAQiB,EAAMjB,QAAU,IAE/C,IFXiB,YEYb,OAAO,EAAP,GAAYiB,EAAZ,CAAmBjB,QAAQiB,EAAMjB,QAAU,IAE/C,IFbW,MEcP,OAAO,EAAP,GAAYiB,EAAZ,CAAmBjB,QAAQiB,EAAMjB,QAAU4B,EAAOd,QAEtD,IFfc,SEgBV,OAAO,EAAP,GAAYG,EAAZ,CAAmBjB,QAAQiB,EAAMjB,QAAU4B,EAAOd,QAI1D,OADAlB,QAAQC,IAAI,UAAWoB,GAChBA,G,yjBCtBX,IAAMS,EAAe,CACjBP,QAAS,IAgBEQ,EAbC,WAAmC,IAAlCV,EAAiC,uDAAzBS,EAAcE,EAAW,uCAE9C,OADFhC,QAAQC,IAAI,mBAAoBoB,GACtBW,EAAOP,MACX,IHJoB,eGKlB,OAAO,KAAKJ,EAAZ,CAAmBE,QAASF,EAAME,QAAQU,OAAO,CAACjB,GAAI,IAAIkB,KAAQhB,MAAMc,EAAON,WAEjF,IHNqB,gBGOnB,YAAUL,EAAV,CAAiBE,QAASF,EAAME,QAAQY,QAAO,SAAAT,GAAM,OAAIA,EAAOV,KAAOgB,EAAOL,qBAGpF,OADA3B,QAAQC,IAAI,oBAAqBoB,GAC1BA,GCJXe,OAAOC,kBAAkBD,OAAOE,6BAEhC,IAAMC,EAAcC,YAAgB,CAChCnC,IAAKoC,EACLnB,IAAKoB,IAGHC,EAAQC,YAAYL,EAAaM,YAAQC,YAAgBC,KAC3DX,OAAOC,kBAAoBD,OAAOC,oBAAsB,SAAAW,GAAC,OAAIA,KAGjEC,IAASC,OAAO,kBAAC,IAAD,CAAUP,MAAQA,GAAQ,kBAAC,EAAD,OAAoBQ,SAASC,eAAe,W","file":"static/js/main.9a3e0666.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from '../actions';\r\n\r\nclass Counter extends Component {\r\n    \r\n    /*counterChangedHandler = ( action, value) => {\r\n        switch ( action) {\r\n            case 'add1':\r\n                this.setState( ( prevState ) => {return {counter: prevState.counter + 1} } )\r\n                break;\r\n            case 'redu1':\r\n                this.setState( ( prevState ) => {return {counter: prevState.counter - 1} } )\r\n                break;\r\n            case 'add5':\r\n                this.setState( ( prevState ) => {return {counter: prevState.counter + value} } )\r\n                break;\r\n            case 'redu5':\r\n                this.setState( ( prevState ) => {return {counter: prevState.counter - value} } )\r\n                break;\r\n        }\r\n    }*/\r\n    \r\n    render () {\r\n        console.log('Counter:', this.props.counter);\r\n        return (\r\n\r\n            \r\n            <div>\r\n                <h1>Your score is: {this.props.ctr} </h1>\r\n                \r\n                <div>\r\n                    <button onClick={this.props.onIncCounter}>Increment</button>\r\n                    <button onClick={this.props.onDecCounter}>Decrement</button>\r\n                    <button onClick={this.props.addCounter}>Add 5</button>\r\n                    <button onClick={this.props.removeCounter}>Substract 5</button>\r\n                    <button onClick={() => this.props.onStoreCounter(this.props.ctr)}>Store result</button>\r\n                    <ul>\r\n                        {this.props.storedResult.map(item => (\r\n                            <li key={item.id} onClick={() =>\r\n                            this.props.onDeleteCounter(item.id)}>{item.value}</li>\r\n                        ))}\r\n                        \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ctr: state.ctr.counter,\r\n        storedResult: state.res.results\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIncCounter: () => dispatch({type: actionTypes.INCREMENT}),\r\n        onDecCounter: () => dispatch({type: actionTypes.DECREMENT}),\r\n        addCounter: () => dispatch({type: actionTypes.ADD, value:5}),\r\n        removeCounter: () => dispatch({type: actionTypes.REMOVE, value:5}),\r\n        onStoreCounter: (result) => dispatch({type: actionTypes.STORE_RESULT, result:result }),\r\n        onDeleteCounter: (id) => dispatch({type: actionTypes.DELETE_RESULT, resultElementId:id }),\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","export const INCREMENT = 'INCREMENT';\r\nexport const DECREMENT = 'DECREMENT';\r\nexport const ADD = 'ADD';\r\nexport const REMOVE = 'REMOVE';\r\nexport const STORE_RESULT = 'STORE_RESULT';\r\nexport const DELETE_RESULT = 'DELETE_RESULT';","import React from 'react';\nimport './App.css';\nimport Counter from './containers/Counter'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Counter />\n    </div>\n  );\n}\n\nexport default App;\n","import * as actionTypes from '../../actions';\r\n\r\nconst initialState = {\r\n    counter: 0\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    console.log('state:', state);\r\n    switch (action.type) {\r\n        case actionTypes.INCREMENT:\r\n            return { ...state, counter:state.counter + 1};\r\n\r\n        case actionTypes.DECREMENT:\r\n            return { ...state, counter:state.counter - 1}; \r\n        \r\n        case actionTypes.ADD:\r\n            return { ...state, counter:state.counter + action.value};    \r\n\r\n        case actionTypes.REMOVE:\r\n            return { ...state, counter:state.counter - action.value};\r\n    \r\n    }\r\n    console.log('state1:', state);\r\n    return state;\r\n\r\n}\r\n\r\nexport default reducer;\r\n\r\n\r\n","import * as actionTypes from '../../actions';\r\nconst initialState = {\r\n    results: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  console.log('statefromresult:', state);\r\n    switch (action.type) {\r\n        case actionTypes.STORE_RESULT: \r\n          return { ...state, results: state.results.concat({id: new Date(), value:action.result})  };\r\n          \r\n        case  actionTypes.DELETE_RESULT:\r\n          return{...state, results: state.results.filter(result => result.id !== action.resultElementId)}\r\n    }\r\n    console.log('statefromresult1:', state);\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { Provider } from 'react-redux';\n\nimport counterReducer from './store/reducers/counter';\nimport resultReducer from './store/reducers/results';\nwindow.devToolsExtension=window.__REDUX_DEVTOOLS_EXTENSION__;\n\nconst rootReducer = combineReducers({\n    ctr: counterReducer,\n    res: resultReducer\n})\n\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n));\n\nReactDOM.render(<Provider store={ store }><App /></Provider>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}